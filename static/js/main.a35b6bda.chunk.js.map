{"version":3,"sources":["Components/Header.js","Components/Display.js","Components/Counter.js","Components/Buttons.js","Components/Form.js","Components/App.js","index.js"],"names":["Header","props","className","gameChoice","Display","message","Counter","standardHighscore","guesses","expertHighscore","Buttons","onClick","standardGame","disabled","expertGame","Form","Fragment","onSubmit","this","submitGuess","type","onChange","getUserGuess","value","userGuess","placeholder","name","newGame","resetChoice","Component","initialState","randomNum","App","state","standardNum","Math","floor","random","expertNum","e","setState","target","console","log","preventDefault","answer","parseInt","mode","standardHS","expertHS","guessAmount","guessliteral","countMessage","myValue","clearInput","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a35b6bda.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n    return (\n        <header>\n            <h1>\n                <span \n                className={props.gameChoice === \"\" ? \"blink\" : null}>\n                {props.gameChoice === \"\" ? \"Start Game\" : \"Guess Game\"}\n                </span>\n            </h1>\n            <p>Press Standard or Expert to begin</p>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\n\nconst Display = (props) => {\n    return (\n        <div className=\"display\">\n                <div className=\"display-rules\">\n                    <p className=\"display-rules-headline\">Rules:</p> \n                    <p>{props.gameChoice === \"\" ? null : props.gameChoice === \"Standard\" ? \"Choose number from 1 to 10\":\"Choose number from 1 to 100\"}</p>\n                </div>        \n            <p className=\"display-message\">{props.message === \"\" ? \"...\" : props.message}</p>\n        </div>\n    );\n}\n\nexport default Display;","import React from 'react'; \nimport Display from './Display';\n\nconst Counter = (props) => {\n    return (\n    <div className=\"center\">\n        <div className={`counter ${props.gameChoice === \"\" || props.gameChoice === \"Expert\" ? \"not-here\" : \"here\"}`}>\n            <p className=\"counter-headline\">Standard</p>\n            <div className=\"counter-score\">\n            <p>High Score: {props.standardHighscore}</p>\n            <p>Guesses: {props.guesses}</p>\n            </div>\n            \n        </div>\n\n            <Display \n            gameChoice={props.gameChoice}\n            message={props.message}\n            standardHighscore={props.standardHighscore}\n            expertHighscore={props.expertHighscore}\n            guesses={props.guesses}/>\n\n        <div className={`counter ${props.gameChoice === \"\" || props.gameChoice === \"Standard\" ? \"not-here\" : \"here\"}`} >   \n            <p className=\"counter-headline\">Expert</p>\n            <div className=\"counter-score\">\n            <p>High Score: {props.expertHighscore}</p>\n            <p>Guesses: {props.guesses}</p>\n            </div>\n        \n        </div>\n        \n    </div>\n    );\n}\nexport default Counter;","import React from 'react';\n\nconst Buttons = (props) => {\n    return (\n    <div className=\"main-btns\">\n         <button \n        onClick={props.standardGame}\n        disabled={props.gameChoice === \"Standard\" || props.gameChoice === '' ? false : true}>\n          Standard\n        </button>\n        <button\n        onClick={props.expertGame}\n        disabled={props.gameChoice === \"Expert\" || props.gameChoice === ''? false : true}>\n          Expert\n        </button>\n    </div>\n\n    );\n}\n\nexport default Buttons;","import React, {Component} from 'react';\n\nclass Form extends Component {\n    \n    render (){\n        return (\n            <React.Fragment>\n            <form onSubmit={this.props.submitGuess}>\n                <input \n                type=\"text\"\n                onChange={this.props.getUserGuess}\n                value = {this.props.userGuess}\n                placeholder=\"Guess\"/>\n\n                <button\n                type=\"submit\"\n                name=\"submit\"\n                value=\"submit\">Submit</button>\n    \n                <button\n                \n                onClick={this.props.newGame}>\n                New Game\n                </button>\n                \n            </form>\n    \n            <div className=\"reset\">\n            <button \n            type=\"reset\"\n            onClick={this.props.resetChoice}>\n            Reset Game Mode\n            </button>\n            </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Form; ","import React, { Component } from 'react';\nimport Header from './Header';\nimport Counter from './Counter';\nimport Buttons from './Buttons';\n\nimport Form from './Form';\n\n\nconst initialState = {\n  userGuess: '',\n  message: '',\n  guesses: 0,\n  randomNum: 0,\n  gameChoice : \"\"\n}\n\nclass App extends Component {\n  state = {\n    ...initialState,\n    expertHighscore: 0,\n    standardHighscore: 0,\n\n  }\n\n  standardNum = () => (Math.floor(Math.random()*10 + 1));\n  expertNum = () => (Math.floor(Math.random()*100 + 1));\n\n  //gets users guess\n  getUserGuess = (e) => {\n    this.setState({\n      userGuess: e.target.value\n    }, ()=> console.log(this.state.userGuess))\n  }\n\n  // starts game based on user choice\n  standardGame = (e) => {\n    e.preventDefault();\n    let answer = this.standardNum();\n\n    this.setState({\n      randomNum: answer,\n      gameChoice: \"Standard\"\n    }, ()=> console.log(this.state.randomNum))\n  }\n\n  expertGame = (e) => {\n    e.preventDefault();\n    let answer = this.expertNum();\n\n    this.setState({\n      randomNum: answer,\n      gameChoice: \"Expert\"\n    }, ()=> console.log(this.state.randomNum))\n  }\n\n\n  //compares and gives feedback\nsubmitGuess = (e) => {\n  e.preventDefault();\n  let userGuess = parseInt(this.state.userGuess);\n  let mode = this.state.gameChoice;\n\n  let standardHS = this.state.standardHighscore;\n  let expertHS = this.state.expertHighscore;\n\n  let guessAmount = this.state.guesses + 1;\n  let guessliteral = this.state.guesses;\n  let answer = this.state.randomNum;\n  let countMessage = `Only took you ${guessAmount} ${guessAmount === 1 ? \"try\" : \"tries\"}`\n   \n  if(mode === \"Standard\") {\n    if( userGuess < answer ) { \n      this.setState({\n          ...this.state,\n          message: \"Try a bigger number\",\n          guesses: guessAmount,\n          userGuess: ''\n      });\n    } if ( userGuess > answer){\n        this.setState({\n            ...this.state,\n            message: \"Try a smaller number\",\n            guesses: guessAmount,\n            userGuess: ''\n        });\n    } \n\n    if(userGuess === answer) {\n        if(standardHS !== 0 && guessliteral< standardHS ){\n            this.setState({\n                ...this.state,\n                standardHighscore: guessAmount,\n                guesses: guessAmount,\n                message: `Congrats! you beat your high score. ${countMessage}`,\n                userGuess: ''\n            });\n        } \n        if(standardHS === 0) {\n            this.setState({\n                ...this.state,\n                standardHighscore: guessAmount,\n                guesses: guessAmount,\n                message: `You're right! ${countMessage}`,\n                userGuess: ''\n            })\n        }\n        if(standardHS !== 0 && guessAmount > standardHS){\n            this.setState({\n                ...this.state,\n                guesses: guessAmount,\n                message: `You're right! ${countMessage}`,\n                userGuess: ''\n            });\n        }\n    }\n\n    }\n    if(mode === \"Expert\") {\n      if( userGuess < answer ) { \n        this.setState({\n            ...this.state,\n            message: \"Try a bigger number\",\n            guesses: guessAmount,\n            userGuess: ''\n        });\n    } if ( userGuess > answer){\n        this.setState({\n            ...this.state,\n            message: \"Try a smaller number\",\n            guesses: guessAmount,\n            userGuess: ''\n        });\n    } \n\n    if(userGuess === answer) {\n        if(expertHS !== 0 && guessliteral< expertHS ){\n            this.setState({\n                ...this.state,\n                expertHighscore: guessAmount,\n                guesses: guessAmount,\n                message: `Congrats! you beat your high score. ${countMessage}`,\n                userGuess: ''\n            });\n        } \n        if(expertHS === 0) {\n            this.setState({\n                ...this.state,\n                expertHighscore: guessAmount,\n                guesses: guessAmount,\n                message: `You're right! ${countMessage}`,\n                userGuess: ''\n            })\n        }\n        if(expertHS !== 0 && guessAmount > expertHS){\n            this.setState({\n                ...this.state,\n                guesses: guessAmount,\n                message: `You're right! ${countMessage}`,\n                userGuess: ''\n            });\n        }\n    }\n    }\n}\n\n  // resets user choice\n  resetChoice = (e) => {\n    e.preventDefault();\n    this.setState({\n      ...initialState})\n  }\n  \n  // new game\n  newGame = (e) => {\n    e.preventDefault();\n    let mode = this.state.gameChoice;\n\n    if(mode === \"Standard\"){\n      this.setState({\n        ...initialState,\n        gameChoice: \"Standard\",\n        randomNum: this.standardNum()\n      }, ()=> console.log(this.state.randomNum) )\n    }\n    if(mode === \"Expert\"){\n      this.setState({\n        ...initialState,\n        gameChoice: \"Expert\",\n        randomNum: this.expertNum()\n      }, ()=> console.log(this.state.randomNum) )\n    }\n  }\n\n\n  render () {\n    return (\n      <React.Fragment >\n        <Header \n        gameChoice={this.state.gameChoice}/>\n\n        <Buttons \n        standardGame={this.standardGame}\n        expertGame={this.expertGame}\n        gameChoice={this.state.gameChoice}/>\n\n      <div className={this.state.gameChoice===\"\"? \"not-here\" : \"here\"}>\n        <Counter \n        gameChoice={this.state.gameChoice}\n        guesses={this.state.guesses}\n        standardHighscore={this.state.standardHighscore}\n        expertHighscore={this.state.expertHighscore}\n        message={this.state.message}\n      />\n\n\n        <Form \n        userGuess={this.state.userGuess}\n        myValue={this.state.myValue}\n        clearInput={this.clearInput}\n        getUserGuess={this.getUserGuess}\n        submitGuess={this.submitGuess}\n        newGame={this.newGame}\n        resetChoice={this.resetChoice}/>\n      </div>\n\n</React.Fragment>\n\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n    <App />, \n    document.getElementById('root'));\n"],"sourceRoot":""}